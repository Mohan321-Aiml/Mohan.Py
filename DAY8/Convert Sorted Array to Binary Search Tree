# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def sortedArrayToBST(self, nums):
        """
        :type nums: List[int]
        :rtype: Optional[TreeNode]
        """
        return self.makeBST(nums, 0, len(nums))
    def makeBST(self, nums, s, e):
        if s >= e:
            return None
        val = nums[(s + e)//2]
        root = TreeNode(val)
        root.left = self.makeBST(nums, s, (s + e)//2)
        root.right = self.makeBST(nums, 1+((s + e))//2, e)
        return root

        
