# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def sortedListToBST(self, head):
        if not head:
            return None
        if not head.next:
            return TreeNode(head.val)
        res=[]

        dummy= head
        curr= dummy

        while curr:
            res.append(curr.val)
            curr=curr.next
        
        def bst(arr):

            if not arr:
                return None
            mid= (len(arr)//2)
            m= TreeNode(arr[mid])
            m.left= bst(arr[:mid])
            m.right= bst(arr[mid+1:])

            return m

        return bst(res)
    
        
